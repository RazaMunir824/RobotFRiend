{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","event","setState","Searchfield","target","value","state","console","log","fetch","then","response","json","users","filterRobot","this","filter","toLowerCase","includes","length","Cardlist","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAceA,EAZF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAQC,EAAQ,EAARA,GAC7B,OACC,yBAAMC,UAAU,uDACf,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACpB,6BACW,4BAAKF,GACL,2BAAIC,MCcJK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,6BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCIhBW,EAbG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACnB,OACC,yBAAKV,UAAW,OACd,2BACAW,KAAK,OACLC,YAAY,oBACZZ,UAAY,mCACZa,SAAUH,MCDCI,EARA,SAACC,GACd,OACE,yBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClEJ,EAAMK,WCiDEC,G,wDA3CX,aAAc,IAAD,8BACZ,gBAeDX,eAAiB,SAACY,GAGjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAjBzC,EAAKC,MAAM,CACVvB,OAAQ,GACRoB,YAAY,IAEbI,QAAQC,IAAI,eANA,E,gEASO,IAAD,OAClBD,QAAQC,IAAI,qBACZC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACnB,OAAQ8B,S,+BASlC,IAAD,OAEDC,EAAcC,KAAKT,MAAMvB,OAAOiC,QAAO,SAAAjC,GACzC,OAAOA,EAAOP,KAAKyC,cAAcC,SAAS,EAAKZ,MAAMH,YAAYc,kBAIpE,OAFCV,QAAQC,IAAI,UAELO,KAAKT,MAAMvB,OAAOoC,OAG1B,yBAAKxC,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,eAAgB0B,KAAK1B,iBAChC,kBAAC,EAAD,KACC,kBAAC+B,EAAD,CAAUrC,OAAQ+B,MANtB,2C,GA/BcO,c,MCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,U","file":"static/js/main.ef8cb627.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , email , id}) => {\r\n\treturn(\r\n\t\t<div  className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n\t\t <img alt='robots' src={`https://robohash.org/${id}?200*200`}  />\r\n\t\t\t <div>\r\n               <h2>{name}</h2>\r\n               <p>{email}</p>\r\n\t\t\t </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","\r\nimport React from 'react';\r\n\r\n\r\nconst SearchBox = ({onSearchChange}) => {\t\r\n\treturn(\r\n\t\t<div className ='pa2'>\r\n\t\t\t <input \r\n\t\t\t type='text' \r\n\t\t\t placeholder='Search Robot Here'\r\n\t\t\t className = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t onChange={onSearchChange}\r\n\t\t\t />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n//import {robots} from './robots'\r\n\r\n\r\nimport Cardlist from '../components/Cardlist'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport  '../containers/App.css'\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n    \tsuper()\r\n    \tthis.state={\r\n    \t\trobots: [],\r\n    \t\tSearchfield:''\r\n    \t}\r\n     console.log('constructor')\r\n    }\r\n\r\n    componentDidMount(){\r\n    \tconsole.log('componentDidMount')\r\n    \tfetch('https://jsonplaceholder.typicode.com/users')\r\n    \t .then(response => response.json())\r\n    \t .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n    \t\r\n    \t\r\n    \tthis.setState({Searchfield: event.target.value})\r\n    }\r\n\r\n\trender(){\r\n        //const {robots , Searchfield} = this.state\r\n\t\tconst filterRobot = this.state.robots.filter(robots => {\r\n    \t\treturn robots.name.toLowerCase().includes(this.state.Searchfield.toLowerCase());\r\n    \t})\r\n    console.log('render')\r\n\r\n\t  return !this.state.robots.length ?\r\n\t\t  <h1>loading</h1> :\r\n\t\t  (\r\n\t\t\t<div className='tc'>\r\n\t\t\t    <h1 className='f1'>RoboFriends</h1>\r\n\t\t\t    <SearchBox onSearchChange={this.onSearchChange} />\r\n\t\t\t    <Scroll>\r\n\t\t\t     <Cardlist robots={filterRobot} />\r\n\t\t\t    </Scroll> \t\t    \r\n\t        </div>\r\n\t\t  );\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <App />  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}